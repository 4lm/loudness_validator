import os
Import( 'env' )
Import( 'loudnessAnalyserLibStatic' )
Import( '*' )

if 'loudnessToolsLibStatic' in locals():

	### loudness-analyser ###

	loudnessAnalyserProgram = env.Program(
		'loudness-analyser',
		Glob( 'analyser/*.cpp' ),
		LIBS = [
			loudnessAnalyserLibStatic,
			loudnessToolsLibStatic,
			'sndfile',
		]
	)

	### loudness-corrector ###

	loudnessCorrectorProgram = env.Program(
		'loudness-corrector',
		Glob( 'corrector/*.cpp' ),
		LIBS = [
			loudnessAnalyserLibStatic,
			loudnessToolsLibStatic,
			'sndfile',
		]
	)

	env.Alias( 'install', env.Install( 'bin', loudnessAnalyserProgram ) )
	env.Alias( 'install', env.Install( 'bin', loudnessCorrectorProgram ) )

	### loudness-validator ###

	# check qt4 library
	qtEnv = env.Clone()
	conf = Configure(qtEnv)
	if conf.CheckLib('QtCore', language='cxx'):
	    qtEnv = conf.Finish()

	    qtEnv.Tool('qt')

	    loudnessValidatorLibraries = [
	        loudnessAnalyserLibStatic,
	        loudnessToolsLibStatic,
	        'sndfile',
	    ]

	    loudnessValidatorFrameworks = []

	    QtLibs = [
	        'QtCore',
	        'QtGui',
	    ]

	    if not qtEnv['PLATFORM'] == 'darwin':
	        loudnessValidatorLibraries.append( QtLibs )
	    else:
	        loudnessValidatorFrameworks.append( QtLibs )

	    loudnessValidatorProgram = qtEnv.Program(
	        'loudness-validator',
	        Glob( 'LoudnessValidator/*.cpp' ),
	        LIBS = loudnessValidatorLibraries,
	        FRAMEWORKS = loudnessValidatorFrameworks,
	    )

	    qtEnv.Alias( 'install', qtEnv.Install( 'bin', loudnessValidatorProgram ) )

	else:
	    print('Warning: did not find QtCore library, will not build loudness-validator app.')
else:
	print('Warning: loudnessTools has not been built, will not build applications.')
